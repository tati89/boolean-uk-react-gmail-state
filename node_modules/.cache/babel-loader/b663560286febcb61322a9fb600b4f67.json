{"ast":null,"code":"import _objectSpread from \"/Users/malena/Documents/react/react-gmail-state-starter-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/malena/Documents/react/react-gmail-state-starter-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/malena/Documents/react/react-gmail-state-starter-1/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport Header from './components/Header';\nimport initialEmails from './data/emails';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$(),\n      _this = this;\n\n  // Use initialEmails for state\n  console.log(initialEmails);\n\n  var _useState = useState(initialEmails),\n      _useState2 = _slicedToArray(_useState, 2),\n      emails = _useState2[0],\n      setEmails = _useState2[1];\n\n  var starredEmailsCounter = emails.filter(function (email) {\n    return email.starred;\n  }).length;\n  var inboxCounter = emails.filter(function (email) {\n    return !email.read;\n  }).length;\n\n  function toggledRead(targetEmail) {\n    var updatedEmails = emails.map(function (email) {\n      if (email.id === targetEmail.id) {\n        return _objectSpread(_objectSpread({}, email), {}, {\n          read: !email.read\n        });\n      }\n\n      return email;\n    });\n    setEmails(updatedEmails);\n  }\n\n  function toggledStarred(targetEmail) {\n    _s();\n\n    var updatedEmails = emails.map(function (email) {\n      if (email.id === targetEmail.id) {\n        return _objectSpread(_objectSpread({}, email), {}, {\n          starred: !starred.starred\n        });\n      }\n\n      return email;\n    });\n    useState(updatedEmails);\n  }\n\n  _s(toggledStarred, \"ME+XzgyRL0UAkIEtReesQxpCdp4=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"left-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"inbox-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"item active\" // onClick={() => {}}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Inbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count\",\n            children: inboxCounter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"item\" // onClick={() => {}}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Starred\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count\",\n            children: starredEmailsCounter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"item toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"hide-read\",\n            children: \"Hide read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"hide-read\",\n            type: \"checkbox\",\n            checked: false // onChange={() => {}}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"emails\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: emails.map(function (email) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"email \".concat(email.read ? true : false),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: email.read,\n              onChange: function onChange() {\n                return toggledRead(email);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"star-checkbox\",\n              checked: email.starred,\n              onChange: function onChange() {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: email.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: email.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, _this)]\n          }, email.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"RmM2dK3nzRaYnXX8hBhmb5RBBm8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/malena/Documents/react/react-gmail-state-starter-1/src/App.js"],"names":["Header","initialEmails","useState","App","console","log","emails","setEmails","starredEmailsCounter","filter","email","starred","length","inboxCounter","read","toggledRead","targetEmail","updatedEmails","map","id","toggledStarred","sender","title"],"mappings":"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","sourcesContent":["import Header from './components/Header'\n\nimport initialEmails from './data/emails'\n\nimport './App.css'\nimport { useState } from 'react'\n\nfunction App() {\n  // Use initialEmails for state\n  console.log(initialEmails)\n  const [emails, setEmails] = useState(initialEmails)\n\n  const starredEmailsCounter = emails.filter(email => email.starred).length\n  const inboxCounter = emails.filter(email => !email.read).length\n\n  function toggledRead(targetEmail) {\n    const updatedEmails = emails.map(email => {\n      if (email.id === targetEmail.id) {\n        return { ...email, read: !email.read }\n      }\n      return email\n    })\n    setEmails(updatedEmails)\n  }\n\n  function toggledStarred(targetEmail) {\n    const updatedEmails = emails.map(email => {\n      if (email.id === targetEmail.id) {\n        return { ...email, starred: !starred.starred }\n      }\n      return email\n    })\n    useState(updatedEmails)\n  }\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <nav className=\"left-menu\">\n        <ul className=\"inbox-list\">\n          <li\n            className=\"item active\"\n            // onClick={() => {}}\n          >\n            <span className=\"label\">Inbox</span>\n            <span className=\"count\">{inboxCounter}</span>\n          </li>\n          <li\n            className=\"item\"\n            // onClick={() => {}}\n          >\n            <span className=\"label\">Starred</span>\n            <span className=\"count\">{starredEmailsCounter}</span>\n          </li>\n\n          <li className=\"item toggle\">\n            <label for=\"hide-read\">Hide read</label>\n            <input\n              id=\"hide-read\"\n              type=\"checkbox\"\n              checked={false}\n              // onChange={() => {}}\n            />\n          </li>\n        </ul>\n      </nav>\n      <main className=\"emails\">\n        <ul>\n          {emails.map(email => {\n            return (\n              <li\n                key={email.id}\n                className={`email ${email.read ? true : false}`}\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={email.read}\n                  onChange={() => toggledRead(email)}\n                />\n                <input\n                  type=\"checkbox\"\n                  className=\"star-checkbox\"\n                  checked={email.starred}\n                  onChange={() => {}}\n                />\n                <span>{email.sender}</span>\n                <span className=\"title\">{email.title}</span>\n              </li>\n            )\n          })}\n        </ul>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}